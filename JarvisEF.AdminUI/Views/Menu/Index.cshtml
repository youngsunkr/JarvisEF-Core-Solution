@model JarvisEF.Models.Pagination.IndexViewModel
@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nestable2/1.5.0/jquery.nestable.min.css">
<style type="text/css">

   

    .small {
        color: #666;
        font-size: 0.875em;
    }

    .large {
        font-size: 1.25em;
    }

    /**
         * Nestable Extras
         */

    .nestable-lists {
        display: block;
        clear: both;
        padding: 30px 0;
        width: 100%;
        border: 0;
        border-top: 2px solid #ddd;
        border-bottom: 2px solid #ddd;
    }

    
    #nestable-output,
    #nestable2-output {
        width: 100%;
        height: 7em;
        font-size: 0.75em;
        line-height: 1.333333em;
        font-family: Consolas, monospace;
        padding: 5px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
    }

    #nestable2 .dd-handle {
        color: #fff;
        border: 1px solid #999;
        background: #bbb;
        background: -webkit-linear-gradient(top, #bbb 0%, #999 100%);
        background: -moz-linear-gradient(top, #bbb 0%, #999 100%);
        background: linear-gradient(top, #bbb 0%, #999 100%);
    }

        #nestable2 .dd-handle:hover {
            background: #bbb;
        }

    #nestable2 .dd-item > button:before {
        color: #fff;
    }

    .dd-hover > .dd-handle {
        background: #2ea8e5 !important;
    }

    /**
         * Nestable Draggable Handles
         */

    .dd3-content {
        display: block;
        height: 30px;
        margin: 5px 0;
        padding: 5px 10px 5px 40px;
        color: #333;
        text-decoration: none;
        font-weight: bold;
        border: 1px solid #ccc;
        background: #fafafa;
        background: -webkit-linear-gradient(top, #fafafa 0%, #eee 100%);
        background: -moz-linear-gradient(top, #fafafa 0%, #eee 100%);
        background: linear-gradient(top, #fafafa 0%, #eee 100%);
        -webkit-border-radius: 3px;
        border-radius: 3px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
    }

        .dd3-content:hover {
            color: #2ea8e5;
            background: #fff;
        }

    .dd-dragel > .dd3-item > .dd3-content {
        margin: 0;
    }

    .dd3-item > button {
        margin-left: 30px;
    }

    .dd3-handle {
        position: absolute;
        margin: 0;
        left: 0;
        top: 0;
        cursor: pointer;
        width: 30px;
        text-indent: 30px;
        white-space: nowrap;
        overflow: hidden;
        border: 1px solid #aaa;
        background: #ddd;
        background: -webkit-linear-gradient(top, #ddd 0%, #bbb 100%);
        background: -moz-linear-gradient(top, #ddd 0%, #bbb 100%);
        background: linear-gradient(top, #ddd 0%, #bbb 100%);
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

        .dd3-handle:before {
            content: '≡';
            display: block;
            position: absolute;
            left: 0;
            top: 3px;
            width: 100%;
            text-align: center;
            text-indent: 0;
            color: #fff;
            font-size: 20px;
            font-weight: normal;
        }

        .dd3-handle:hover {
            background: #ddd;
        }
</style>

@section Scripts
{
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
    <script src="~/js/jquery.nestable.min.js"></script>
    <script type="text/javascript">

        nestable = {}
        nestable.fn_itemAdd = function () {
            alert('메뉴 Popup 띄워서 추가 할것')
        }

        $(function() {

            var lastId = 12;

            $('#nestable-menu').on('click',
                function(e) {
                    var target = $(e.target),
                        action = target.data('action');
                    if (action === 'expand-all') {
                        $('.dd').nestable('expandAll');
                    }
                    if (action === 'collapse-all') {
                        $('.dd').nestable('collapseAll');
                    }
                    if (action === 'add-item') {
                        nestable.fn_itemAdd();

                        var newItem = {
                            "id": ++lastId,
                            "content": "Item " + lastId,
                            "children": [
                                {
                                    "id": ++lastId,
                                    "content": "Item " + lastId,
                                    "children": [
                                        {
                                            "id": ++lastId,
                                            "content": "Item " + lastId
                                        }
                                    ]
                                }
                            ]
                        };
                        $('#nestable3').nestable('add', newItem);
                    }
                    if (action === 'replace-item') {
                        var replacedItem = {
                            "id": 10,
                            "content": "New item 10",
                            "children": [
                                {
                                    "id": ++lastId,
                                    "content": "Item " + lastId,
                                    "children": [
                                        {
                                            "id": ++lastId,
                                            "content": "Item " + lastId
                                        }
                                    ]
                                }
                            ]
                        };
                        $('#nestable3').nestable('replace', replacedItem);
                    }
                });

            $('#nestable3').nestable().nestable('collapseAll');

        });


        
    </script>

}

<menu id="nestable-menu">
    <button type="button" data-action="expand-all">Expand All</button>
    <button type="button" data-action="collapse-all">Collapse All</button>
    <button type="button" data-action="add-item">Add new item</button>
    <button type="button" data-action="replace-item">Replace item 10</button>
</menu>

<div class="cf nestable-lists">

    <div class="dd" id="nestable3">
        <ol class="dd-list">
            <li class="dd-item dd3-item" data-id="13">
                <div class="dd-handle dd3-handle">Drag</div>
                <div class="dd3-content">Item 13</div>
            </li>
            <li class="dd-item dd3-item" data-id="14">
                <div class="dd-handle dd3-handle">Drag</div>
                <div class="dd3-content">Item 14</div>
            </li>
            <li class="dd-item dd3-item" data-id="15">
                <div class="dd-handle dd3-handle">Drag</div>
                <div class="dd3-content">Item 15</div>
                <ol class="dd-list">
                    <li class="dd-item dd3-item" data-id="16">
                        <div class="dd-handle dd3-handle">Drag</div>
                        <div class="dd3-content">Item 16</div>
                    </li>
                    <li class="dd-item dd3-item" data-id="17">
                        <div class="dd-handle dd3-handle">Drag</div>
                        <div class="dd3-content">Item 17</div>
                    </li>
                    <li class="dd-item dd3-item" data-id="18">
                        <div class="dd-handle dd3-handle">Drag</div>
                        <div class="dd3-content">Item 18</div>
                    </li>
                </ol>
            </li>
        </ol>
    </div>

</div>


<!-- Pager -->
<div class="container">
    <div class="col-md-6 col-md-offset-3">

        <!-- items being paged -->
        <ul>
            @foreach (var item in Model.Items)
            {
                <li>@item</li>
            }
        </ul>

        <!-- pager -->
        @if (Model.Pager.EndPage > 1)
        {
            <ul class="pagination">
                @if (Model.Pager.CurrentPage > 1)
                {
                    <li>
                        <a href="~/Home/Index">First</a>
                    </li>
                    <li>
                        <a href="~/Home/Index?page=@(Model.Pager.CurrentPage - 1)">Previous</a>
                    </li>
                }

                @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                        <a href="~/Menu/Index?page=@(page)">@(page)</a>
                    </li>
                }

                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        <a href="~/Menu/Index?page=@(Model.Pager.CurrentPage + 1)">Next</a>
                    </li>
                    <li>
                        <a href="~/Menu/Index?page=@(Model.Pager.TotalPages)">Last</a>
                    </li>
                }
            </ul>
        }
    </div>
</div>


